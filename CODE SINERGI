library(shiny)
library(shinydashboard)
library(dplyr)
library(DT)
library(lubridate)
library(plotly)

# Buat folder dan file penyimpanan jika belum ada
if (!dir.exists("data")) dir.create("data")

if (!file.exists("data/data_presensi.csv")) {
  write.csv(data.frame(perusahaan = character(),
                       username = character(),
                       tanggal = as.Date(character()),
                       stringsAsFactors = FALSE),
            "data/data_presensi.csv", row.names = FALSE)
}

if (!file.exists("data/data_cuti.csv")) {
  write.csv(data.frame(perusahaan = character(),
                       username = character(),
                       tanggal = as.Date(character()),
                       alasan = character(),
                       stringsAsFactors = FALSE),
            "data/data_cuti.csv", row.names = FALSE)
}

if (!file.exists("data/users.csv")) {
  write.csv(data.frame(perusahaan = character(),
                       username = character(),
                       password = character(),
                       role = character(),
                       stringsAsFactors = FALSE),
            "data/users.csv", row.names = FALSE)
}

get_users <- function() {
  read.csv("data/users.csv", stringsAsFactors = FALSE)
}

save_user <- function(perusahaan, username, password, role) {
  users <- get_users()
  users <- rbind(users, data.frame(perusahaan, username, password, role, stringsAsFactors = FALSE))
  write.csv(users, "data/users.csv", row.names = FALSE)
}

get_presensi <- function() {
  read.csv("data/data_presensi.csv", stringsAsFactors = FALSE) %>%
    mutate(tanggal = as.Date(tanggal))
}

get_cuti <- function() {
  cuti <- read.csv("data/data_cuti.csv", stringsAsFactors = FALSE)
  
  # Tambahkan kolom 'alasan' jika tidak ada
  if (!"alasan" %in% names(cuti)) {
    cuti$alasan <- ""
  }
  
  cuti %>% mutate(tanggal = as.Date(tanggal))
}

ui <- dashboardPage(
  dashboardHeader(title = span("SINERGI", style = "font-weight:bold; color:white;"),
                  tags$li(class = "dropdown", style = "margin-right:10px;", uiOutput("logout_btn"))),
  dashboardSidebar(uiOutput("sidebarUI")),
  dashboardBody(
    tags$head(
      tags$style(HTML("
        body {
          background-image: url('Sinergi.png');
          background-size: 400px;
          background-position: center;
          background-repeat: no-repeat;
          background-attachment: fixed;
        }
        .content-wrapper {
          background-color: rgba(255,255,255,0.9) !important;
        }
        .main-header .logo {
          background-color: #00e676 !important;
          color: white !important;
        }
        .skin-blue .main-header .navbar {
          background-color: #00e676 !important;
        }
        .skin-blue .main-sidebar {
          background-color: #e0f7fa;
        }
        .box.box-primary {
          border-top-color: #00e676;
        }
        .btn-primary {
          background-color: #00e676;
          border-color: #00e676;
        }
        .btn-primary:hover {
          background-color: #00c853;
          border-color: #00c853;
        }
        /* Styling halaman awal */
        #landing-page {
          position: relative;
          text-align: center;
          color: #333;
          padding: 20px;
        }
        #landing-page .bg-image {
          position: fixed;
          top: 0; left: 0; right: 0; bottom: 0;
          background-size: cover;
          opacity: 0.15;
          z-index: -1;
        }
        #landing-page .content-box {
          background-color: rgba(255,255,255,0.85);
          border-radius: 10px;
          padding: 30px;
          max-zwidth: 500px;
          margin: 40px auto;
          box-shadow: 0 0 15px rgba(0,0,0,0.2);
        }
        #landing-page .btn-login, #landing-page .btn-about {
          margin: 10px;
        }
        #customer-service {
          background-color: #e0f7fa;
          border: 1px solid #00e676;
          border-radius: 10px;
          padding: 15px;
          max-width: 350px;
          margin: 30px auto;
          font-weight: bold;
          color: #00796b;
        }
      "))
    ),
    uiOutput("bodyUI")
  )
)

server <- function(input, output, session) {
  rv <- reactiveValues(
    perusahaan = NULL,
    username = NULL,
    role = NULL,
    login = FALSE,
    register_mode = FALSE,
    show_landing = TRUE
  )
  
  output$logout_btn <- renderUI({
    if (rv$login) actionButton("logout", "Logout", class = "btn-danger")
  })
  
  observeEvent(input$logout, {
    rv$login <- FALSE
    rv$username <- NULL
    rv$role <- NULL
    rv$perusahaan <- NULL
    rv$show_landing <- TRUE
    updateTextInput(session, "username", value = "")
    updateTextInput(session, "password", value = "")
  })
  
  output$sidebarUI <- renderUI({
    if (!rv$login) return(NULL)
    if (rv$role == "admin") {
      sidebarMenu(
        menuItem("Input Presensi", tabName = "input_presensi"),
        menuItem("Lihat Presensi", tabName = "lihat_presensi"),
        menuItem("Lihat Cuti", tabName = "lihat_cuti"),
        menuItem("Evaluasi Beban Kerja", tabName = "evaluasi_kerja"),
        menuItem("Kalender Kerja", tabName = "kalender")
      )
    } else {
      sidebarMenu(
        menuItem("Lihat Presensi", tabName = "lihat_presensi"),
        menuItem("Pengajuan Cuti", tabName = "pengajuan_cuti"),
        menuItem("Kalender Kerja", tabName = "kalender")
      )
    }
  })
  
  output$bodyUI <- renderUI({
    if (rv$show_landing && !rv$login) {
      # Halaman landing page pertama
      tagList(
        div(id = "landing-page",
            div(class = "bg-image"),
            div(class = "content-box",
                h2("Selamat Datang di SINERGI"),
                p("Platform manajemen presensi dan cuti karyawan yang mudah dan efisien."),
                actionButton("go_login", "Login", class = "btn btn-primary btn-login"),
                actionButton("go_about", "Tentang Kami", class = "btn btn-info btn-about")
            ),
            div(id = "customer-service",
                "Customer Service: +62 877-3916-8516"
            )
        )
      )
    } else if (!rv$login) {
      # Halaman login dan register
      fluidPage(
        box(title = "Login", status = "primary", solidHeader = TRUE, width = 6,
            selectInput("perusahaan", "Pilih Perusahaan", choices = unique(get_users()$perusahaan)),
            textInput("username", "Username"),
            passwordInput("password", "Password"),
            actionButton("login_btn", "Login", class = "btn-primary"),
            br(), br(),
            actionLink("show_register", "Belum punya akun? Register Now")
        ),
        conditionalPanel(
          condition = "input.show_register != 0",
          box(title = "Register", status = "warning", solidHeader = TRUE, width = 6,
              textInput("reg_perusahaan", "Nama Perusahaan"),
              selectInput("reg_role", "Daftar sebagai", choices = c("admin", "karyawan")),
              textInput("reg_username", "Username"),
              passwordInput("reg_password", "Password"),
              actionButton("register_btn", "Register", class = "btn-warning")
          )
        )
      )
    } else {
      # Halaman utama aplikasi jika sudah login
      tabItems(
        tabItem("input_presensi",
                fluidPage(
                  dateInput("tanggal_input", "Tanggal"),
                  selectInput("karyawan_input", "Pilih Karyawan",
                              choices = get_users() %>%
                                filter(perusahaan == rv$perusahaan, role == "karyawan") %>%
                                pull(username)),
                  actionButton("submit_presensi", "Submit Kehadiran", class = "btn-success")
                )),
        tabItem("lihat_presensi",
                fluidPage(
                  dateInput("tanggal_view", "Pilih Tanggal"),
                  dataTableOutput("tabel_presensi")
                )),
        tabItem("lihat_cuti",
                fluidPage(
                  h3("Pengajuan Cuti Karyawan"),
                  uiOutput("cuti_cards")
                )),
        tabItem("pengajuan_cuti",
                fluidPage(
                  dateInput("cuti_tanggal", "Tanggal Cuti"),
                  textAreaInput("cuti_alasan", "Alasan Pengajuan Cuti"),
                  actionButton("submit_cuti", "Ajukan Cuti", class = "btn-warning")
                )),
        tabItem("evaluasi_kerja",
                fluidPage(
                  h3("Evaluasi Beban Kerja"),
                  plotlyOutput("grafik_beban_kerja")
                )),
        tabItem("kalender",
                fluidPage(
                  h3("Kalender Kerja dan Cuti"),
                  plotlyOutput("kalender_plot")
                ))
      )
    }
  })
  
  observeEvent(input$go_login, {
    rv$show_landing <- FALSE
  })
  
  observeEvent(input$go_about, {
    showModal(modalDialog(
      title = "Tentang Kami",
      "SINERGI adalah aplikasi manajemen presensi dan cuti karyawan yang dirancang untuk memudahkan admin dan karyawan dalam mengelola absensi dan cuti dengan cepat dan efisien.",
      easyClose = TRUE,
      footer = modalButton("Tutup")
    ))
  })
  
  observeEvent(input$login_btn, {
    users <- get_users()
    user <- users %>% filter(
      perusahaan == input$perusahaan,
      username == input$username,
      password == input$password
    )
    if (nrow(user) == 1) {
      rv$login <- TRUE
      rv$username <- user$username
      rv$role <- user$role
      rv$perusahaan <- user$perusahaan
      rv$show_landing <- FALSE
    } else {
      showModal(modalDialog("Login gagal: Periksa kembali data Anda!"))
    }
  })
  
  observeEvent(input$register_btn, {
    if (input$reg_username != "" && input$reg_password != "" && input$reg_perusahaan != "") {
      save_user(input$reg_perusahaan, input$reg_username, input$reg_password, input$reg_role)
      showModal(modalDialog("Registrasi berhasil! Silakan login."))
    } else {
      showModal(modalDialog("Lengkapi semua data registrasi."))
    }
  })
  
  observeEvent(input$submit_presensi, {
    new_entry <- data.frame(
      perusahaan = rv$perusahaan,
      username = input$karyawan_input,
      tanggal = input$tanggal_input
    )
    presensi_now <- get_presensi()
    presensi_now <- rbind(presensi_now, new_entry)
    write.csv(presensi_now, "data/data_presensi.csv", row.names = FALSE)
    showModal(modalDialog("Presensi berhasil ditambahkan!"))
  })
  
  observeEvent(input$submit_cuti, {
    new_entry <- data.frame(
      perusahaan = rv$perusahaan,
      username = rv$username,
      tanggal = input$cuti_tanggal,
      alasan = input$cuti_alasan
    )
    cuti_now <- get_cuti()
    cuti_now <- rbind(cuti_now, new_entry)
    write.csv(cuti_now, "data/data_cuti.csv", row.names = FALSE)
    showModal(modalDialog("Pengajuan cuti berhasil dikirim!"))
  })
  
  output$tabel_presensi <- renderDataTable({
    req(input$tanggal_view)
    data <- get_presensi() %>%
      filter(perusahaan == rv$perusahaan, tanggal == input$tanggal_view)
    if (rv$role == "karyawan") {
      data <- data %>% filter(username == rv$username)
    }
    datatable(data)
  })
  
  output$cuti_cards <- renderUI({
    data <- get_cuti() %>% filter(perusahaan == rv$perusahaan)
    if (nrow(data) == 0) return("Belum ada pengajuan cuti.")
    lapply(1:nrow(data), function(i) {
      box(
        title = paste("Cuti oleh", data$username[i]),
        status = "primary",
        solidHeader = TRUE,
        width = 12,
        collapsible = TRUE,
        p(strong("Tanggal:"), as.character(data$tanggal[i])),
        p(strong("Alasan:"), data$alasan[i])
      )
    })
  })
  
  output$grafik_beban_kerja <- renderPlotly({
    presensi <- get_presensi() %>%
      filter(perusahaan == rv$perusahaan) %>%
      group_by(username) %>%
      summarise(presensi = n(), .groups = "drop")
    
    cuti <- get_cuti() %>%
      filter(perusahaan == rv$perusahaan) %>%
      group_by(username) %>%
      summarise(cuti = n(), .groups = "drop")
    
    all_user <- unique(c(presensi$username, cuti$username))
    data <- data.frame(username = all_user)
    data <- left_join(data, presensi, by = "username")
    data <- left_join(data, cuti, by = "username")
    data[is.na(data)] <- 0
    
    plot_ly(data, x = ~username, y = ~presensi, name = "Presensi", type = "bar") %>%
      add_trace(y = ~cuti, name = "Cuti", type = "bar") %>%
      layout(barmode = "group", yaxis = list(title = "Jumlah Hari"))
  })
  
  output$kalender_plot <- renderPlotly({
    presensi <- get_presensi() %>%
      filter(perusahaan == rv$perusahaan)
    cuti <- get_cuti() %>%
      filter(perusahaan == rv$perusahaan)
    
    if (rv$role == "karyawan") {
      presensi <- presensi %>% filter(username == rv$username)
      cuti <- cuti %>% filter(username == rv$username)
    }
    
    events <- data.frame(
      date = c(presensi$tanggal, cuti$tanggal),
      event = c(rep("Presensi", nrow(presensi)), rep("Cuti", nrow(cuti)))
    )
    
    validate(
      need(nrow(events) > 0, "Belum ada data presensi atau cuti.")
    )
    
    plot_ly(
      data = events,
      x = ~date,
      type = "scatter",
      mode = "markers",
      color = ~event,
      marker = list(size = 10)
    ) %>% layout(
      yaxis = list(showticklabels = FALSE),
      xaxis = list(title = "Tanggal")
    )
  })
}

shinyApp(ui, server)
